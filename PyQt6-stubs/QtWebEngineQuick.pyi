# The PEP 484 type hints stub file for the QtWebEngineQuick module.
#
# Generated by SIP 6.6.0
#
# Copyright (c) 2022 Riverbank Computing Limited <info@riverbankcomputing.com>
#
# This file is part of PyQt6-WebEngine.
#
# This file may be used under the terms of the GNU General Public License
# version 3.0 as published by the Free Software Foundation and appearing in
# the file LICENSE included in the packaging of this file.  Please review the
# following information to ensure the GNU General Public License version 3.0
# requirements will be met: http://www.gnu.org/copyleft/gpl.html.
#
# If you do not wish to use this file under the terms of the GPL version 3.0
# then you may purchase a commercial license.  For more information contact
# info@riverbankcomputing.com.
#
# This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
# WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.

# Support for QDate, QDateTime and QTime.
import datetime
import enum
import typing

import PyQt6.sip
from PyQt6 import QtQml, QtWebEngineCore

# Convenient type aliases.
PYQT_SIGNAL = typing.Union[QtCore.pyqtSignal, QtCore.pyqtBoundSignal]
PYQT_SLOT = typing.Union[typing.Callable[..., None], QtCore.pyqtBoundSignal]

class QQuickWebEngineProfile(QtCore.QObject):
    class PersistentCookiesPolicy(enum.Enum):
        NoPersistentCookies = ...  # type: QQuickWebEngineProfile.PersistentCookiesPolicy
        AllowPersistentCookies = ...  # type: QQuickWebEngineProfile.PersistentCookiesPolicy
        ForcePersistentCookies = ...  # type: QQuickWebEngineProfile.PersistentCookiesPolicy

    class HttpCacheType(enum.Enum):
        MemoryHttpCache = ...  # type: QQuickWebEngineProfile.HttpCacheType
        DiskHttpCache = ...  # type: QQuickWebEngineProfile.HttpCacheType
        NoCache = ...  # type: QQuickWebEngineProfile.HttpCacheType
    def __init__(self, parent: typing.Optional[QtCore.QObject] = ...) -> None: ...
    def presentNotification(self, notification: QtWebEngineCore.QWebEngineNotification) -> None: ...
    def downloadPathChanged(self) -> None: ...
    def clientCertificateStore(self) -> QtWebEngineCore.QWebEngineClientCertificateStore: ...
    def setDownloadPath(self, path: str) -> None: ...
    def downloadPath(self) -> str: ...
    def spellCheckEnabledChanged(self) -> None: ...
    def spellCheckLanguagesChanged(self) -> None: ...
    def isSpellCheckEnabled(self) -> bool: ...
    def setSpellCheckEnabled(self, enabled: bool) -> None: ...
    def spellCheckLanguages(self) -> typing.List[str]: ...
    def setSpellCheckLanguages(self, languages: typing.Iterable[str]) -> None: ...
    def httpAcceptLanguageChanged(self) -> None: ...
    def httpCacheMaximumSizeChanged(self) -> None: ...
    def persistentCookiesPolicyChanged(self) -> None: ...
    def httpCacheTypeChanged(self) -> None: ...
    def httpUserAgentChanged(self) -> None: ...
    def cachePathChanged(self) -> None: ...
    def persistentStoragePathChanged(self) -> None: ...
    def offTheRecordChanged(self) -> None: ...
    def storageNameChanged(self) -> None: ...
    @staticmethod
    def defaultProfile() -> "QQuickWebEngineProfile": ...
    def clearHttpCache(self) -> None: ...
    def removeAllUrlSchemeHandlers(self) -> None: ...
    def removeUrlSchemeHandler(self, a0: QtWebEngineCore.QWebEngineUrlSchemeHandler) -> None: ...
    def removeUrlScheme(self, scheme: QtCore.QByteArray) -> None: ...
    def installUrlSchemeHandler(self, scheme: QtCore.QByteArray, a1: QtWebEngineCore.QWebEngineUrlSchemeHandler) -> None: ...
    def urlSchemeHandler(self, a0: QtCore.QByteArray) -> QtWebEngineCore.QWebEngineUrlSchemeHandler: ...
    def setUrlRequestInterceptor(self, interceptor: QtWebEngineCore.QWebEngineUrlRequestInterceptor) -> None: ...
    def cookieStore(self) -> QtWebEngineCore.QWebEngineCookieStore: ...
    def setHttpAcceptLanguage(self, httpAcceptLanguage: str) -> None: ...
    def httpAcceptLanguage(self) -> str: ...
    def setHttpCacheMaximumSize(self, maxSize: int) -> None: ...
    def httpCacheMaximumSize(self) -> int: ...
    def setPersistentCookiesPolicy(self, a0: "QQuickWebEngineProfile.PersistentCookiesPolicy") -> None: ...
    def persistentCookiesPolicy(self) -> "QQuickWebEngineProfile.PersistentCookiesPolicy": ...
    def setHttpCacheType(self, a0: "QQuickWebEngineProfile.HttpCacheType") -> None: ...
    def httpCacheType(self) -> "QQuickWebEngineProfile.HttpCacheType": ...
    def setHttpUserAgent(self, userAgent: str) -> None: ...
    def httpUserAgent(self) -> str: ...
    def setCachePath(self, path: str) -> None: ...
    def cachePath(self) -> str: ...
    def setPersistentStoragePath(self, path: str) -> None: ...
    def persistentStoragePath(self) -> str: ...
    def setOffTheRecord(self, offTheRecord: bool) -> None: ...
    def isOffTheRecord(self) -> bool: ...
    def setStorageName(self, name: str) -> None: ...
    def storageName(self) -> str: ...

class QtWebEngineQuick(PyQt6.sip.simplewrapper):
    def initialize(self) -> None: ...
